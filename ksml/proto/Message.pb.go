// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/Message.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Message is sent from the dual node to kardia when it receive a trigger smart contract transaction.
type EventMessage struct {
	TransactionId        string   `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Method               string   `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Params               []string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Amount               uint64   `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Sender               string   `protobuf:"bytes,7,opt,name=sender,proto3" json:"sender,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,8,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Timestamp            uint64   `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventMessage) Reset()         { *m = EventMessage{} }
func (m *EventMessage) String() string { return proto.CompactTextString(m) }
func (*EventMessage) ProtoMessage()    {}
func (*EventMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f09e46891427801, []int{0}
}

func (m *EventMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMessage.Unmarshal(m, b)
}
func (m *EventMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMessage.Marshal(b, m, deterministic)
}
func (m *EventMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMessage.Merge(m, src)
}
func (m *EventMessage) XXX_Size() int {
	return xxx_messageInfo_EventMessage.Size(m)
}
func (m *EventMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EventMessage proto.InternalMessageInfo

func (m *EventMessage) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *EventMessage) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *EventMessage) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *EventMessage) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *EventMessage) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *EventMessage) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *EventMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventMessage) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *EventMessage) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*EventMessage)(nil), "protocol.EventMessage")
}

func init() { proto.RegisterFile("proto/Message.proto", fileDescriptor_1f09e46891427801) }

var fileDescriptor_1f09e46891427801 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0x70, 0x25, 0x0d, 0x69, 0x72, 0xfc, 0x19, 0x8c, 0x84, 0x6e, 0x60, 0x08, 0x88, 0xa1,
	0x53, 0x19, 0x78, 0x83, 0x4a, 0x0c, 0x0c, 0x30, 0x74, 0x64, 0x73, 0x12, 0x53, 0x2a, 0x7a, 0xbe,
	0xe8, 0x7c, 0xe5, 0xd9, 0x19, 0x51, 0x2e, 0x91, 0xa0, 0x93, 0xef, 0xfb, 0x9d, 0xed, 0xe1, 0x83,
	0xeb, 0x41, 0x58, 0xf9, 0xf1, 0x35, 0xa4, 0xe4, 0x77, 0x61, 0x6d, 0xc9, 0x55, 0x76, 0x74, 0x7c,
	0xb8, 0xff, 0xc9, 0xe0, 0xe2, 0xf9, 0x3b, 0x44, 0x9d, 0x2f, 0xb8, 0x07, 0xb8, 0x54, 0xf1, 0x31,
	0xf9, 0x4e, 0xf7, 0x1c, 0x5f, 0x7a, 0xcc, 0x9a, 0x6c, 0x55, 0x6f, 0x4f, 0xd1, 0x39, 0x28, 0x3e,
	0x84, 0x09, 0x73, 0x5b, 0xda, 0xec, 0xae, 0x20, 0x57, 0xc6, 0x85, 0x49, 0xae, 0xec, 0x6e, 0xa0,
	0xa4, 0xa0, 0x9f, 0xdc, 0x63, 0x61, 0x36, 0xa7, 0xd1, 0x07, 0x2f, 0x9e, 0x12, 0x9e, 0x35, 0x8b,
	0xd1, 0xa7, 0x34, 0xba, 0x27, 0x3e, 0x46, 0xc5, 0xb2, 0xc9, 0x56, 0xc5, 0x76, 0x4e, 0xa3, 0xa7,
	0x10, 0xfb, 0x20, 0xb8, 0x9c, 0xfe, 0x99, 0x92, 0x6b, 0xe0, 0xbc, 0x3d, 0x70, 0xf7, 0xf5, 0x76,
	0xa4, 0x36, 0x08, 0x56, 0xf6, 0xe8, 0x3f, 0xb9, 0x5b, 0xa8, 0x75, 0x4f, 0x21, 0xa9, 0xa7, 0x01,
	0x6b, 0xdb, 0xff, 0xc1, 0xe6, 0x0e, 0x2a, 0x96, 0xdd, 0x5a, 0x85, 0xe3, 0xe6, 0xa4, 0x83, 0xf7,
	0x25, 0x4d, 0x43, 0x5b, 0x5a, 0x4f, 0x4f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xc9, 0x25,
	0xff, 0x45, 0x01, 0x00, 0x00,
}
